/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/led/led.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip { chain-length = <28>; };

&pro_micro_i2c {
    status = "okay";
    sda-pin = <&gpio0 1 GPIO_ACTIVE_LOW>;  // D3 (PD0)
    scl-pin = <&gpio0 2 GPIO_ACTIVE_LOW>;  // D2 (PD1)

    oled: ssd1306@3c {
        compatible = "solomon,ssd1306fb";
        reg = <0x3c>;
        width = <128>;
        height = <32>;
        segment-offset = <0>;
        page-offset = <0>;
        display-offset = <0>;
        multiplex-ratio = <31>;
        segment-remap;
        com-invdir;
        com-sequential;
        inversion-on;
        prechargep = <0x22>;
    };
};

/ {
    chosen {
        zmk,battery = &vbatt;
        zephyr,display = &oled;
        zmk,kscan = &kscan0;
        zmk,matrix-transform = &default_transform;
    };

    vbatt: vbatt { compatible = "zmk,battery-nrf-vddh"; };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        wakeup-source;

        diode-direction = "col2row";
        row-gpios
            = <&pro_micro 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ;

    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp E      &kp R  &kp T        &kp Y    &kp U  &kp I          &kp O    &kp P     &kp BSPC
&kp TAB     &kp A  &kp S  &kp D      &kp F  &kp G        &kp H    &kp J  &kp K          &kp L    &kp SEMI  &kp SQT
&kp LSHFT   &kp Z  &kp X  &kp C      &kp V  &kp B        &kp N    &kp M  &kp COMMA      &kp DOT  &kp FSLH  &kp RSHFT
                          &kp LCTRL  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp BACKSPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp F1     &kp F2        &kp F3          &kp F4          &kp F5           &kp F6     &kp F7      &kp F8        &kp F9           &kp F10            &kp F11          &kp F12
&kp GRAVE  &kp LEFT_WIN  &kp PAGE_UP     &kp UP_ARROW    &kp PAGE_DOWN    &kp TAB    &bl BL_TOG  &bl BL_CYCLE  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF    &rgb_ug RGB_BRI  &sys_reset
&kp LCTRL  &kp LEFT_ALT  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans     &bt BT_CLR  &bt BT_PRV    &bt BT_NXT       &ext_power EP_TOG  &rgb_ug RGB_BRD  &rgb_ug RGB_HUI
                                         &trans          &trans           &trans     &kp RET     &to 3         &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL    &kp AT          &kp HASH          &kp DLLR    &kp PRCNT          &trans        &kp N7        &kp N8        &kp N9        &kp BACKSLASH     &kp BSPC
&kp LCTRL  &sys_reset  &rgb_ug RGB_ON  &rgb_ug RGB_OFF   &kp C_MUTE  &kp C_VOLUME_UP    &trans        &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&kp LSHFT  &soft_off   &kp C_PREV      &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_VOL_DN       &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp MINUS         &kp EQUAL
                                       &kp LGUI          &trans      &kp SPACE          &kp RET       &trans        &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&kp ESC      &kp ESC    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4    &trans  &trans  &trans  &trans  &trans  &trans
&kp LA(TAB)  &kp TAB    &kp Q         &kp W         &kp E         &kp R           &trans  &trans  &trans  &trans  &trans  &trans
&kp LSHFT    &kp LSHFT  &kp A         &kp S         &kp D         &kp F           &kp Z   &kp X   &kp C   &kp V   &trans  &trans
                                      &to 0         &kp SPACE     &kp LCTRL       &trans  &trans  &trans
            >;
        };
    };
};
